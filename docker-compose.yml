# This is the final, recommended configuration.
# It builds a single, self-contained image with all dependencies.

services:
  pdf2zh:
    build:
      context: .
      # All the setup steps are now part of a one-time build process.
      dockerfile_inline: |
        FROM ghcr.io/astral-sh/uv:python3.12-bookworm-slim

        WORKDIR /app

        # 1. Install system-level dependencies FIRST.
        # This includes Thai text rendering dependencies.
        RUN apt-get update && \
            apt-get install --no-install-recommends -y \
            libgl1 libglib2.0-0 libxext6 libsm6 libxrender1 \
            fonts-thai-tlwg fonts-noto fonts-noto-cjk fonts-noto-color-emoji \
            wget unzip && \
            rm -rf /var/lib/apt/lists/*

        # 2. Download and install Thai fonts for text shaping.
        RUN mkdir -p /app/fonts && \
            wget -O /app/fonts/NotoSansThai-Regular.ttf "https://github.com/googlefonts/noto-fonts/raw/main/hinted/ttf/NotoSansThai/NotoSansThai-Regular.ttf" || \
            wget -O /app/fonts/Sarabun-Regular.ttf "https://github.com/cadsondemak/Sarabun/raw/master/fonts/ttf/Sarabun-Regular.ttf" || \
            echo "Using system fonts" && \
            ls -la /app/fonts/

        # 3. Copy only the dependency file and install Python packages.
        # This layer is cached and only re-runs if pyproject.toml changes.
        COPY pyproject.toml .
        RUN uv pip install --system --no-cache -r pyproject.toml

        # 4. Copy the rest of your application code.
        COPY . .

        # 5. Install the local package and perform final updates/warmups.
        RUN uv pip install --system --no-cache . && \
            uv pip install --system --no-cache -U "babeldoc<0.3.0" "pymupdf<1.25.3" "pdfminer-six==20250416" && \
            babeldoc --warmup

        # 6. Verify Thai text shaping setup and update configuration (disabled by default for testing).
        RUN python -c "import uharfbuzz; print('✅ HarfBuzz installed successfully')" && \
            python -c "import os; print('✅ Thai fonts available:', os.listdir('/app/fonts'))" && \
            python -c "import json, os; font_candidates = ['/app/fonts/NotoSansThai-Regular.ttf', '/app/fonts/Sarabun-Regular.ttf', '/usr/share/fonts/truetype/thai/Garuda.ttf']; font_path = next((f for f in font_candidates if os.path.exists(f)), '/usr/share/fonts/truetype/thai/Garuda.ttf'); config = {'TEXT_SHAPING_ENABLED': 'false', 'NOTO_FONT_PATH': font_path}; os.makedirs('config', exist_ok=True); json.dump(config, open('config/config.json', 'w'), indent=4); print(f'✅ Configuration created with font: {font_path} (shaping disabled for testing)')"

    # The rest of the configuration is for RUNNING the built image.
    ports:
      - "7860:7860"

    environment:
      - PYTHONUNBUFFERED=1
      # The UV_LINK_MODE warning happens during build, so we can set it there if needed,
      # but it's generally harmless.

    command: ["pdf2zh", "-i"]

    # Mount volumes for persistent data, config access, and custom fonts
    volumes:
      - ./data:/app/data
      - ./config:/root/.config/PDFMathTranslate
      - ./fonts:/app/fonts

    stdin_open: true
    tty: true